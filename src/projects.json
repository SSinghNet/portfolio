[
    {
        "title": "SSingh.Net Music",
        "desc": "A dynamic music blog built with Node.js & Express.js. Leverages Bootstrap to create the front-end design. Utilizes a custom-built RESTful API to insert data about albums, artists, tags, etc. Uses a MySQL Database to store data and an AWS S3 Bucket to store images.",
        "tech": "Node.js, Express.js, Pug (Jade), HTML, Javascript, CSS, Bootstrap, SQL, MySQL, AWS",
        "img": "images/SSinghNetMusic.png",
        "githublink": "https://github.com/SSinghNet/music.ssingh.net",
        "link": "https://music.ssingh.net/"
    },
    {
        "title": "S.SSingh.Net",
        "desc": "A link shortener built with PHP that uses a MySQL database.",
        "tech": "PHP, MySQL, SQL, CSS",
        "img": "images/SSSinghNet.png",
        "githublink": "https://github.com/SSinghNet/S.SSingh.Net",
        "link": "https://s.ssingh.net/"
    },
    {
        "title": "Expense Tracker",
        "desc": "Cross-platform Expense Tracker mobile app made with the Flutter framework.",
        "tech": "Flutter, Dart",
        "img": "images/expense.png",
        "githublink": "https://github.com/SSinghNet/expense_tracker",
        "link": ""
    },
    {
        "title": "Word Matters",
        "desc": "Word puzzle game built for Android with Java and Android Studio",
        "tech": "Java, Android Studio",
        "img": "images/WordMatters.png",
        "githublink": "https://github.com/SSinghNet/WordMatters",
        "link": ""
    },
    {
        "title": "Merge Request Bot",
        "desc": "A Discord Bot that generates the above image with specified text on top.",
        "tech": "Python, Discord API",
        "img": "images/mergerequest.jpg",
        "githublink": "https://github.com/SSinghNet/MergeRequestBot",
        "link": ""
    },
    {
        "title": "Student Information System",
        "desc": "A student information system built for the Mount Olive Robotics Team with Node.js & Express.js. Stores sensitive information about each student in a MongoDB database, to be used in emergency situations. Implements a secure login system to keep sensitive information safe.",
        "tech": "Node.js, Express.js, Pug (Jade), HTML, Javascript, CSS, MongoDB, NoSQL",
        "img": "",
        "githublink": "https://github.com/SSinghNet/StudentInformationSystem",
        "link": ""
    },
    {
        "title": "Realtime API",
        "desc": "RESTful Flask API for my high school's student information system made with Python and the Flask framework. Gets all information through web scraping and the requests library. Ability to get grades, class information, and other miscellaneous information.",
        "tech": "Python, Flask",
        "img": "",
        "githublink": "https://github.com/SSinghNet/mtoliverealtimeflask",
        "link": ""
    },
    {
        "title": "Tic-Tac-Toe",
        "desc": "A Simple Tic-Tac-Toe game for Android built with Java and Android Studio",
        "tech": "Java, Android Studio",
        "img": "",
        "githublink": "https://github.com/SSinghNet/Tic-Tac-Toe",
        "link": ""
    },
    {
        "title": "Find Lyric in Spotify Playlist",
        "desc": "Gets all songs from a Spotify playlist and then gets all their lyrics using the Genius api. All lyrics are written to a lyrics.json file that can be searched through.",
        "tech": "Python, Spotify API, Genius API",
        "img": "",
        "githublink": "https://github.com/SSinghNet/findLyricInPlaylist",
        "link": ""
    }
    
]